// <auto-generated />
using System;
using Hospital.Repositoy.dbcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hospital.Repositoy.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hospital.Entity.Finalreport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int>("Idmachinereview");

                    b.Property<int?>("MachinereviewId");

                    b.Property<string>("Reportdate");

                    b.HasKey("Id");

                    b.HasIndex("MachinereviewId");

                    b.ToTable("Finalreports");
                });

            modelBuilder.Entity("Hospital.Entity.Machinereview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Idschedule");

                    b.Property<string>("Reviewdate");

                    b.Property<int?>("ScheduleId");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Machinereviews");
                });

            modelBuilder.Entity("Hospital.Entity.Medicalequipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<string>("Name");

                    b.Property<string>("Statedescription");

                    b.HasKey("Id");

                    b.ToTable("Medicalequipments");
                });

            modelBuilder.Entity("Hospital.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Date");

                    b.Property<string>("Descripcion");

                    b.Property<int>("Idmedicalequipment");

                    b.Property<int?>("MedicalequipmentId");

                    b.Property<int>("Priority");

                    b.HasKey("Id");

                    b.HasIndex("MedicalequipmentId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Hospital.Entity.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos");

                    b.Property<string>("Direccion");

                    b.Property<string>("Dni");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnName("Nombres")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Hospital.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descripcion");

                    b.Property<string>("namerole");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Hospital.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agreeddate");

                    b.Property<int>("Idorder");

                    b.Property<int>("Iduser");

                    b.Property<int?>("OrderId");

                    b.Property<int?>("UserId");

                    b.Property<string>("arrivaldate");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Hospital.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<int>("Idrol");

                    b.Property<string>("Name");

                    b.Property<string>("Numdoc");

                    b.Property<string>("Passwordhash");

                    b.Property<string>("Passwordsalt");

                    b.Property<string>("Phone");

                    b.Property<int?>("RoleId");

                    b.Property<string>("Tipodoc");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Hospital.Entity.Finalreport", b =>
                {
                    b.HasOne("Hospital.Entity.Machinereview", "Machinereview")
                        .WithMany()
                        .HasForeignKey("MachinereviewId");
                });

            modelBuilder.Entity("Hospital.Entity.Machinereview", b =>
                {
                    b.HasOne("Hospital.Entity.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("Hospital.Entity.Order", b =>
                {
                    b.HasOne("Hospital.Entity.Medicalequipment", "Medicalequipment")
                        .WithMany()
                        .HasForeignKey("MedicalequipmentId");
                });

            modelBuilder.Entity("Hospital.Entity.Schedule", b =>
                {
                    b.HasOne("Hospital.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("Hospital.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Hospital.Entity.User", b =>
                {
                    b.HasOne("Hospital.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
